{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aschnall/Documents/Portfolio/trivia-redux-edit/src/components/NextQuestion.js\";\nimport React, { Component, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux'; // import { nextQuestion, endGame, resetSelect, fetchQuestions } from '../actions';\n\nconst NextQuestion = props => {\n  //display the next button after user selects an answer\n  //if on last question, button will display with text of 'finish' rather than 'next question'\n  return props.questionIndex === props.questions.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.next,\n    children: \"Finish\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 4\n  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.next,\n    children: \"Next Question\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 4\n  }, this);\n};\n\n_c = NextQuestion;\n\nconst mapStateToProps = state => {\n  return {\n    questionIndex: state.updateState.questionIndex,\n    questions: state.questionReducer.questions\n  };\n};\n\nexport default connect(mapStateToProps)(NextQuestion);\n\nvar _c;\n\n$RefreshReg$(_c, \"NextQuestion\");","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/trivia-redux-edit/src/components/NextQuestion.js"],"names":["React","Component","useEffect","useRef","connect","NextQuestion","props","questionIndex","questions","length","next","mapStateToProps","state","updateState","questionReducer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE/B;AACA;AACA,SACCA,KAAK,CAACC,aAAN,KAAwBD,KAAK,CAACE,SAAN,CAAgBC,MAAxC,gBACC;AAAQ,IAAA,OAAO,EAAEH,KAAK,CAACI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,gBAEC;AAAQ,IAAA,OAAO,EAAEJ,KAAK,CAACI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAQA,CAZD;;KAAML,Y;;AAcN,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNL,IAAAA,aAAa,EAAEK,KAAK,CAACC,WAAN,CAAkBN,aAD3B;AAENC,IAAAA,SAAS,EAAEI,KAAK,CAACE,eAAN,CAAsBN;AAF3B,GAAP;AAIA,CALD;;AAOA,eAAeJ,OAAO,CAACO,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React, { Component, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\n// import { nextQuestion, endGame, resetSelect, fetchQuestions } from '../actions';\n\nconst NextQuestion = (props) => {\n\n\t//display the next button after user selects an answer\n\t//if on last question, button will display with text of 'finish' rather than 'next question'\n\treturn (\n\t\tprops.questionIndex === props.questions.length ? \n\t\t\t<button onClick={props.next}>Finish</button> :\n\t\t\t<button onClick={props.next} >\n\t\t\t\tNext Question\n\t\t\t</button> \n\n\t);\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquestionIndex: state.updateState.questionIndex,\n\t\tquestions: state.questionReducer.questions,\n\t}\n}\n\nexport default connect(mapStateToProps)(NextQuestion);\n\n\n"]},"metadata":{},"sourceType":"module"}