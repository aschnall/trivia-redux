{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aschnall/Documents/Portfolio/sports-trivia/src/components/QuestionDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport NextQuestion from './NextQuestion';\n\nconst QuestionDisplay = ({\n  display,\n  next\n}) => {\n  _s();\n\n  // const [select, setSelect] = useState(false);\n  const refs = useRef([]);\n\n  const checkAnswer = event => {\n    for (let i = 0; i < display.questionChoices.length; i++) {\n      if (event.target.textContent === display.questionChoices[i].answerText) {\n        if (display.questionChoices[i].isCorrect === false) {\n          refs.current[i].setAttribute(\"style\", \"background-color: red\");\n        } else {\n          refs.current[i].setAttribute(\"style\", \"background-color: green\");\n        }\n      }\n\n      setSelect(true);\n\n      if (display.questionChoices[i].isCorrect === true) {\n        refs.current[i].setAttribute(\"style\", \"background-color: green\");\n      }\n    }\n  };\n\n  const prevent = event => {\n    event.preventDefault();\n  };\n\n  const choices = display.questionChoices.map((choice, index) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: el => refs.current.push(el),\n      onClick: select ? prevent : checkAnswer,\n      children: choice.answerText\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: display.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: choices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: select ? /*#__PURE__*/_jsxDEV(NextQuestion, {\n        select: select,\n        question: display,\n        next: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuestionDisplay, \"78a5ZvbznFIFfo3Z5YuaFsj29P0=\");\n\n_c = QuestionDisplay;\nexport default QuestionDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDisplay\");","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/sports-trivia/src/components/QuestionDisplay.js"],"names":["React","useRef","useState","NextQuestion","QuestionDisplay","display","next","refs","checkAnswer","event","i","questionChoices","length","target","textContent","answerText","isCorrect","current","setAttribute","setSelect","prevent","preventDefault","choices","map","choice","index","el","push","select","questionText"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAqB;AAAA;;AAC5C;AACA,QAAMC,IAAI,GAAGN,MAAM,CAAC,EAAD,CAAnB;;AAEA,QAAMO,WAAW,GAAGC,KAAK,IAAI;AAC5B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACM,eAAR,CAAwBC,MAA5C,EAAoDF,CAAC,EAArD,EAAyD;AACxD,UAAID,KAAK,CAACI,MAAN,CAAaC,WAAb,KAA6BT,OAAO,CAACM,eAAR,CAAwBD,CAAxB,EAA2BK,UAA5D,EAAwE;AACvE,YAAIV,OAAO,CAACM,eAAR,CAAwBD,CAAxB,EAA2BM,SAA3B,KAAyC,KAA7C,EAAoD;AACnDT,UAAAA,IAAI,CAACU,OAAL,CAAaP,CAAb,EAAgBQ,YAAhB,CAA6B,OAA7B,EAAsC,uBAAtC;AACA,SAFD,MAGK;AACJX,UAAAA,IAAI,CAACU,OAAL,CAAaP,CAAb,EAAgBQ,YAAhB,CAA6B,OAA7B,EAAsC,yBAAtC;AACA;AACD;;AACDC,MAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,UAAId,OAAO,CAACM,eAAR,CAAwBD,CAAxB,EAA2BM,SAA3B,KAAyC,IAA7C,EAAmD;AAClDT,QAAAA,IAAI,CAACU,OAAL,CAAaP,CAAb,EAAgBQ,YAAhB,CAA6B,OAA7B,EAAsC,yBAAtC;AACA;AACD;AACD,GAfD;;AAiBA,QAAME,OAAO,GAAGX,KAAK,IAAI;AACxBA,IAAAA,KAAK,CAACY,cAAN;AACA,GAFD;;AAKA,QAAMC,OAAO,GAAGjB,OAAO,CAACM,eAAR,CAAwBY,GAAxB,CAA4B,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9D,wBACC;AAEC,MAAA,GAAG,EAAEC,EAAE,IAAInB,IAAI,CAACU,OAAL,CAAaU,IAAb,CAAkBD,EAAlB,CAFZ;AAGC,MAAA,OAAO,EAAEE,MAAM,GAAGR,OAAH,GAAaZ,WAH7B;AAAA,gBAG2CgB,MAAM,CAACT;AAHlD,OACMU,KADN;AAAA;AAAA;AAAA;AAAA,YADD;AAOA,GARe,CAAhB;AAUA,sBACC;AAAA,4BACC;AAAA,gBAAKpB,OAAO,CAACwB;AAAb;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBACEP;AADF;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AAAA,gBACEM,MAAM,gBAAG,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEA,MAAtB;AAA8B,QAAA,QAAQ,EAAEvB,OAAxC;AAAiD,QAAA,IAAI,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAqE;AAD7E;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CA/CD;;GAAMF,e;;KAAAA,e;AAiDN,eAAeA,eAAf","sourcesContent":["import React, {useRef, useState} from 'react';\nimport NextQuestion from './NextQuestion';\n\nconst QuestionDisplay = ({display, next}) => {\n\t// const [select, setSelect] = useState(false);\n\tconst refs = useRef([]);\n\n\tconst checkAnswer = event => {\n\t\tfor (let i = 0; i < display.questionChoices.length; i++) {\n\t\t\tif (event.target.textContent === display.questionChoices[i].answerText) {\n\t\t\t\tif (display.questionChoices[i].isCorrect === false) {\n\t\t\t\t\trefs.current[i].setAttribute(\"style\", \"background-color: red\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trefs.current[i].setAttribute(\"style\", \"background-color: green\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetSelect(true);\n\t\t\tif (display.questionChoices[i].isCorrect === true) {\n\t\t\t\trefs.current[i].setAttribute(\"style\", \"background-color: green\");\n\t\t\t}\n\t\t}\n\t}\n\n\tconst prevent = event => {\n\t\tevent.preventDefault();\n\t}\n\n\n\tconst choices = display.questionChoices.map((choice, index) => {\n\t\treturn (\n\t\t\t<button \n\t\t\t\tkey={index}\n\t\t\t\tref={el => refs.current.push(el)} \n\t\t\t\tonClick={select ? prevent : checkAnswer}>{choice.answerText}\n\t\t\t</button>\n\t\t);\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>{display.questionText}</h1>\n\t\t\t<div>\n\t\t\t\t{choices}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{select ? <NextQuestion select={select} question={display} next={next} /> : ''}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default QuestionDisplay;\n\n\n"]},"metadata":{},"sourceType":"module"}