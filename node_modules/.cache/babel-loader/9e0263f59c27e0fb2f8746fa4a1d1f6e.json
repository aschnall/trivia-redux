{"ast":null,"code":"import { combineReducers } from 'redux';\nconst initialQuestionState = {\n  questions: []\n};\n\nconst questionReducer = (state = initialQuestionState, action) => {\n  switch (action.type) {\n    case 'FETCH_QUESTIONS':\n      const questions = action.payload.map(question => {\n        const formattedQuestions = {\n          question: question.question\n        };\n        const answerChoices = [...question.incorrect_answers];\n        formattedQuestions.answer = Math.floor(Math.random() * 3);\n        answerChoices.splice(formattedQuestions.answer, 0, question.correct_answer);\n        formattedQuestions.choices = [];\n        answerChoices.forEach((choice, index) => {\n          formattedQuestions.choices.push(choice);\n        });\n        return formattedQuestions;\n      });\n      return { ...state,\n        questions: questions\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nconst initialState = {\n  start: false\n};\n\nconst startReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case 'START_GAME':\n      return { ...state,\n        start: true\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default combineReducers({\n  questionReducer,\n  startReducer\n});","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/trivia-redux-edit/src/reducers/index.js"],"names":["combineReducers","initialQuestionState","questions","questionReducer","state","action","type","payload","map","question","formattedQuestions","answerChoices","incorrect_answers","answer","Math","floor","random","splice","correct_answer","choices","forEach","choice","index","push","initialState","start","startReducer","intialState"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,SAAS,EAAE;AADc,CAA7B;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAACH,oBAAP,EAA6BI,MAA7B,KAAwC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACI,YAAMJ,SAAS,GAAGG,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAoBC,QAAD,IAAc;AAC/C,cAAMC,kBAAkB,GAAG;AACvBD,UAAAA,QAAQ,EAAEA,QAAQ,CAACA;AADI,SAA3B;AAGA,cAAME,aAAa,GAAG,CAAC,GAAGF,QAAQ,CAACG,iBAAb,CAAtB;AACAF,QAAAA,kBAAkB,CAACG,MAAnB,GAA4BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAA5B;AACAL,QAAAA,aAAa,CAACM,MAAd,CAAqBP,kBAAkB,CAACG,MAAxC,EAAgD,CAAhD,EAAmDJ,QAAQ,CAACS,cAA5D;AACAR,QAAAA,kBAAkB,CAACS,OAAnB,GAA6B,EAA7B;AACAR,QAAAA,aAAa,CAACS,OAAd,CAAsB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACrCZ,UAAAA,kBAAkB,CAACS,OAAnB,CAA2BI,IAA3B,CAAgCF,MAAhC;AACH,SAFD;AAGA,eAAOX,kBAAP;AACH,OAZiB,CAAlB;AAaA,aAAO,EAAC,GAAGN,KAAJ;AAAWF,QAAAA,SAAS,EAAEA;AAAtB,OAAP;;AACJ;AACI,aAAOE,KAAP;AAjBR;;AAkBC;AACJ,CApBD;;AAsBA,MAAMoB,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACtB,KAAK,GAACuB,WAAP,EAAoBtB,MAApB,KAA+B;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,YAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWqB,QAAAA,KAAK,EAAE;AAAlB,OAAP;;AACJ;AACI,aAAOrB,KAAP;AAJR;;AAKC;AAEJ,CARD;;AAUA,eAAeJ,eAAe,CAAC;AAACG,EAAAA,eAAD;AAAkBuB,EAAAA;AAAlB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\n\nconst initialQuestionState = {\n    questions: []\n};\n\nconst questionReducer = (state=initialQuestionState, action) => {\n    switch(action.type) {\n        case 'FETCH_QUESTIONS':\n            const questions = action.payload.map((question) => {\n                const formattedQuestions = {\n                    question: question.question\n                }\n                const answerChoices = [...question.incorrect_answers];\n                formattedQuestions.answer = Math.floor(Math.random() * 3);\n                answerChoices.splice(formattedQuestions.answer, 0, question.correct_answer);\n                formattedQuestions.choices = [];\n                answerChoices.forEach((choice, index) => {\n                    formattedQuestions.choices.push(choice);\n                })\n                return formattedQuestions;\n            });\n            return {...state, questions: questions};\n        default:\n            return state;\n    };\n};\n\nconst initialState = {\n    start: false\n}\n\nconst startReducer = (state=intialState, action) => {\n    switch(action.type) {\n        case 'START_GAME':\n            return {...state, start: true };\n        default:\n            return state;\n    };\n\n};\n\nexport default combineReducers({questionReducer, startReducer});\n\n"]},"metadata":{},"sourceType":"module"}