{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aschnall/Documents/Portfolio/sports-trivia/src/components/QuestionDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\n\nconst QuestionDisplay = ({\n  display\n}) => {\n  _s();\n\n  const [select, setSelect] = useState(false);\n  let refs = useRef([]);\n  useEffect(() => {\n    const choices = display.questionChoices.map((choice, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: el => refs.current.push(el),\n        onClick: checkAnswer,\n        children: choice.answerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this);\n    });\n  }, [select]);\n\n  const checkAnswer = event => {\n    for (let i = 0; i < display.questionChoices.length; i++) {\n      if (event.target.textContent === display.questionChoices[i].answerText) {\n        if (display.questionChoices[i].isCorrect === false) {\n          refs.current[i].setAttribute(\"style\", \"background-color: red\");\n        } else {\n          refs.current[i].setAttribute(\"style\", \"background-color: green\");\n        }\n\n        console.log(refs.current);\n      }\n\n      setSelect(true);\n    }\n  }; // const choices = display.questionChoices.map((choice, index) => {\n  // \t\treturn <button ref={el => refs.current.push(el)} onClick={checkAnswer}>{choice.answerText}</button>;\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: display.questionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: choices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuestionDisplay, \"9/OVq03acvMqqNHGQ0TBCUqtGcM=\");\n\n_c = QuestionDisplay;\nexport default QuestionDisplay; // <button ref={ref} onClick={test}>{display.questionChoices[0].answerText}</button>\n// <button ref={ref} onClick={test}>{display.questionChoices[1].answerText}</button>\n// <button onClick={checkAnswer}>{display.questionChoices[2].answerText}</button>\n// <button onClick={checkAnswer}>{display.questionChoices[3].answerText}</button>\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionDisplay\");","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/sports-trivia/src/components/QuestionDisplay.js"],"names":["React","useRef","useState","useEffect","QuestionDisplay","display","select","setSelect","refs","choices","questionChoices","map","choice","index","el","current","push","checkAnswer","answerText","event","i","length","target","textContent","isCorrect","setAttribute","console","log","questionText"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAkD,OAAlD;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,MAAIM,IAAI,GAAGP,MAAM,CAAC,EAAD,CAAjB;AAEAE,EAAAA,SAAS,CAAC,MAAK;AACd,UAAMM,OAAO,GAAGJ,OAAO,CAACK,eAAR,CAAwBC,GAAxB,CAA4B,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9D,0BAAO;AAAQ,QAAA,GAAG,EAAEC,EAAE,IAAIN,IAAI,CAACO,OAAL,CAAaC,IAAb,CAAkBF,EAAlB,CAAnB;AAA0C,QAAA,OAAO,EAAEG,WAAnD;AAAA,kBAAiEL,MAAM,CAACM;AAAxE;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAFe,CAAhB;AAGA,GAJQ,EAIN,CAACZ,MAAD,CAJM,CAAT;;AAMA,QAAMW,WAAW,GAAIE,KAAD,IAAW;AAC9B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,OAAO,CAACK,eAAR,CAAwBW,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACxD,UAAID,KAAK,CAACG,MAAN,CAAaC,WAAb,KAA6BlB,OAAO,CAACK,eAAR,CAAwBU,CAAxB,EAA2BF,UAA5D,EAAwE;AACvE,YAAIb,OAAO,CAACK,eAAR,CAAwBU,CAAxB,EAA2BI,SAA3B,KAAyC,KAA7C,EAAoD;AACnDhB,UAAAA,IAAI,CAACO,OAAL,CAAaK,CAAb,EAAgBK,YAAhB,CAA6B,OAA7B,EAAsC,uBAAtC;AACA,SAFD,MAGK;AACJjB,UAAAA,IAAI,CAACO,OAAL,CAAaK,CAAb,EAAgBK,YAAhB,CAA6B,OAA7B,EAAsC,yBAAtC;AACA;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACO,OAAjB;AACA;;AACDR,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA;AACD,GAbD,CAVsC,CA0BtC;AACA;AACA;;;AAEA,sBACC;AAAA,4BACC;AAAA,gBAAKF,OAAO,CAACuB;AAAb;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBACEnB;AADF;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CAtCD;;GAAML,e;;KAAAA,e;AAwCN,eAAeA,eAAf,C,CAGI;AACA;AACA;AACA","sourcesContent":["import React, {useRef, useState, useEffect } from 'react';\n\nconst QuestionDisplay = ({display}) => {\n\tconst [select, setSelect] = useState(false);\n\tlet refs = useRef([]);\n\n\tuseEffect(()=> {\n\t\tconst choices = display.questionChoices.map((choice, index) => {\n\t\t\treturn <button ref={el => refs.current.push(el)} onClick={checkAnswer}>{choice.answerText}</button>;\n\t\t})\n\t}, [select]);\n\n\tconst checkAnswer = (event) => {\n\t\tfor (let i = 0; i < display.questionChoices.length; i++) {\n\t\t\tif (event.target.textContent === display.questionChoices[i].answerText) {\n\t\t\t\tif (display.questionChoices[i].isCorrect === false) {\n\t\t\t\t\trefs.current[i].setAttribute(\"style\", \"background-color: red\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trefs.current[i].setAttribute(\"style\", \"background-color: green\");\n\t\t\t\t}\n\t\t\t\tconsole.log(refs.current);\n\t\t\t}\n\t\t\tsetSelect(true);\n\t\t}\n\t}\n\n\n\t// const choices = display.questionChoices.map((choice, index) => {\n\t// \t\treturn <button ref={el => refs.current.push(el)} onClick={checkAnswer}>{choice.answerText}</button>;\n\t// })\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>{display.questionText}</h1>\n\t\t\t<div>\n\t\t\t\t{choices}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default QuestionDisplay;\n\n\n\t\t\t\t// <button ref={ref} onClick={test}>{display.questionChoices[0].answerText}</button>\n\t\t\t\t// <button ref={ref} onClick={test}>{display.questionChoices[1].answerText}</button>\n\t\t\t\t// <button onClick={checkAnswer}>{display.questionChoices[2].answerText}</button>\n\t\t\t\t// <button onClick={checkAnswer}>{display.questionChoices[3].answerText}</button>\n"]},"metadata":{},"sourceType":"module"}