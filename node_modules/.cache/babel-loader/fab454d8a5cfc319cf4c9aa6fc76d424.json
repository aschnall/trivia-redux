{"ast":null,"code":"import _classCallCheck from\"/Users/aschnall/Documents/Portfolio/trivia-redux-edit/trivia-redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/aschnall/Documents/Portfolio/trivia-redux-edit/trivia-redux/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/aschnall/Documents/Portfolio/trivia-redux-edit/trivia-redux/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/aschnall/Documents/Portfolio/trivia-redux-edit/trivia-redux/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component}from'react';import{connect}from'react-redux';import{onChoiceSelect,onCorrect}from'../actions';import NextQuestion from'./NextQuestion';import'../style/App.scss';var QuestionDisplay=/*#__PURE__*/function(_Component){_inherits(QuestionDisplay,_Component);var _super=_createSuper(QuestionDisplay);function QuestionDisplay(){var _this;_classCallCheck(this,QuestionDisplay);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.checkAnswer=function(event){var _this$props=_this.props,questions=_this$props.questions,questionIndex=_this$props.questionIndex,onCorrect=_this$props.onCorrect,onChoiceSelect=_this$props.onChoiceSelect;//looping over answer choices to find the index of user's selected answer in the choices array\nvar choices=document.getElementsByClassName('choice');var buttonIndex=0;for(var i=0;i<choices.length;i++){if(event.target.textContent===choices[i].textContent){buttonIndex=i;break;}}//grabbing value of answer property on the questions array which equls the index of the correct answer on the choices array\nvar answerIndex=questions[questionIndex].answer;//check if user's answer equals correct answer - if so increment score with onCorrect action creator and disply button as correct\nif(event.target.textContent===questions[questionIndex].choices[answerIndex]){choices[answerIndex].classList.add(\"choice-correct\");onCorrect();}//if user's answer is incorrect use buttonIndex value to display chosen button as incorrect and answerIndex to display the correct answer button\nelse{choices[buttonIndex].classList.add(\"choice-incorrect\");choices[answerIndex].classList.add(\"choice-correct\");}onChoiceSelect();};return _this;}_createClass(QuestionDisplay,[{key:\"renderChoices\",//mapping over the choices array to create a button for each choice to display on the screen\nvalue:function renderChoices(){var _this2=this;var _this$props2=this.props,questions=_this$props2.questions,questionIndex=_this$props2.questionIndex;var choices=questions[questionIndex].choices.map(function(choice,index){return/*#__PURE__*/_jsx(\"button\",{dangerouslySetInnerHTML:{__html:choice},className:\"choice\",onClick:_this2.checkAnswer},index);});return choices;}},{key:\"render\",value:function render(){var _this$props3=this.props,questions=_this$props3.questions,questionIndex=_this$props3.questionIndex,select=_this$props3.select;return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Question: \",questionIndex+1,\" of \",questions.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-display\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:/*#__PURE__*/_jsx(\"h1\",{dangerouslySetInnerHTML:{__html:questions[questionIndex].question}})}),/*#__PURE__*/_jsx(\"div\",{className:\"choice-wrapper\",children:this.renderChoices()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"next\",children:select?/*#__PURE__*/_jsx(NextQuestion,{}):''})]});}}]);return QuestionDisplay;}(Component);var mapStateToProps=function mapStateToProps(state){return{questionIndex:state.updateState.questionIndex,questions:state.questionReducer.questions,select:state.updateState.select};};export default connect(mapStateToProps,{onChoiceSelect:onChoiceSelect,onCorrect:onCorrect})(QuestionDisplay);","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/trivia-redux-edit/trivia-redux/src/components/QuestionDisplay.js"],"names":["React","Component","connect","onChoiceSelect","onCorrect","NextQuestion","QuestionDisplay","checkAnswer","event","props","questions","questionIndex","choices","document","getElementsByClassName","buttonIndex","i","length","target","textContent","answerIndex","answer","classList","add","map","choice","index","__html","select","question","renderChoices","mapStateToProps","state","updateState","questionReducer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { onChoiceSelect, onCorrect } from '../actions';\n\nimport NextQuestion from './NextQuestion';\nimport '../style/App.scss';\n\nclass QuestionDisplay extends Component {\n\n\t//onClick event handler from the choice buttons\n\tcheckAnswer = event => {\n\t\tconst { questions, questionIndex, onCorrect, onChoiceSelect } = this.props;\n\t\t//looping over answer choices to find the index of user's selected answer in the choices array\n\t\tconst choices = document.getElementsByClassName('choice');\n\t\tlet buttonIndex = 0;\n\t\tfor (let i = 0; i < choices.length; i++) {\n\t\t\tif (event.target.textContent === choices[i].textContent) {\n\t\t\t\tbuttonIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//grabbing value of answer property on the questions array which equls the index of the correct answer on the choices array\n\t\tconst answerIndex = questions[questionIndex].answer;\n\t\t//check if user's answer equals correct answer - if so increment score with onCorrect action creator and disply button as correct\n\t\tif (event.target.textContent === questions[questionIndex].choices[answerIndex]) {\n\t\t\tchoices[answerIndex].classList.add(\"choice-correct\");\n\t\t\tonCorrect();\n\t\t}\n\t\t//if user's answer is incorrect use buttonIndex value to display chosen button as incorrect and answerIndex to display the correct answer button\n\t\telse {\n\t\t\tchoices[buttonIndex].classList.add(\"choice-incorrect\");\n\t\t\tchoices[answerIndex].classList.add(\"choice-correct\");\n\t\t}\n\t\tonChoiceSelect();\n\t}\n\n\t//mapping over the choices array to create a button for each choice to display on the screen\n\trenderChoices() {\n\t\tconst { questions, questionIndex } = this.props;\n\t\tconst choices = questions[questionIndex].choices.map((choice, index) => {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tdangerouslySetInnerHTML={{__html: choice}}\n\t\t\t\t\tclassName=\"choice\"\n\t\t\t\t\tkey={index}\n\t\t\t\t\tonClick={this.checkAnswer}\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t);\n\t\t})\n\t\treturn choices;\n\t}\n\n\trender() {\n\t\tconst { questions, questionIndex, select } = this.props;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<strong>Question: {questionIndex + 1} of {questions.length}</strong>\n\t\t\t\t<div className=\"question-display\">\n\t\t\t\t\t<div className=\"question-text\">\n\t\t\t\t\t\t<h1 dangerouslySetInnerHTML={{__html:questions[questionIndex].question}}></h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"choice-wrapper\">\n\t\t\t\t\t\t{this.renderChoices()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"next\">\n\t\t\t\t\t{select ? <NextQuestion  /> : ''}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tquestionIndex: state.updateState.questionIndex,\n\t\tquestions: state.questionReducer.questions,\n\t\tselect: state.updateState.select\n\t};\n};\n\nexport default connect(mapStateToProps, {onChoiceSelect, onCorrect })(QuestionDisplay);\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}